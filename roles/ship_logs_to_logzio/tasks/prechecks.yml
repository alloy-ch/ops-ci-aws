# checks the mandatory variables/parameters to make sure we have everything
---

- name: "[logzio-prechecks] check if we have a valid 'logzio_region'"
  when: logzio_region != '' and logzio_region != 'eu'
  fail:
    msg: "mandatory 'logzio_region' has a wrong value"

- name: "[logzio-prechecks] check if we have a valid 'logzio_format'"
  when: logzio_format != 'json' and logzio_format != 'text'
  fail:
    msg: "mandatory 'logzio_format' has a wrong value"

- name: "[logzio-prechecks] check if we have a valid 'logzio_type'"
  when: logzio_type == ''
  fail:
    msg: "mandatory 'logzio_type' has a wrong value"

- name: "[logzio-prechecks] check if we have a valid 'logzio_format'"
  when: logzio_format != 'json' and logzio_format != 'text'
  fail:
    msg: "mandatory 'logzio_format' has a wrong value"

- name: "[logzio-prechecks] check if we have a valid 'logzio_compress'"
  when: logzio_compress != 'true' and logzio_compress != 'false'
  fail:
    msg: "mandatory 'logzio_compress' has a wrong value"

- name: "[logzio-prechecks] check if we have a valid 'logzio_send_all'"
  when: logzio_send_all != 'true' and logzio_send_all != 'false'
  fail:
    msg: "mandatory 'logzio_send_all' has a wrong value"

- name: "[logzio-prechecks] check if we have a valid 'logzio_token_ssm_parameter_name'"
  when: logzio_token_ssm_parameter_name == ''
  fail:
    msg: "mandatory 'logzio_token_ssm_parameter_name' has a wrong value"

- name: '[logzio-prechecks] decrypt the logz.io token'
  command: |
    aws --region {{ aws_region }} ssm get-parameter --output json --name {{ logzio_token_ssm_parameter_name }} --with-decryption
  register: r_get_param

- name: '[logzio-prechecks] parse the result'
  set_fact:
    ssm_param: '{{ r_get_param.stdout | from_json }}'

- name: '[logzio-prechecks] check the parameter type'
  when: ssm_param.Parameter.Type != 'SecureString'
  fail:
    msg: '{{ logzio_token_ssm_parameter_name }} is not encrypted as it should be'

- name: '[logzio-prechecks] save the token'
  set_fact:
    logzio_token: '{{ ssm_param.Parameter.Value }}'

- name: '[logzio-prechecks] check the log group'
  when: logzio_log_group_to_monitor is not defined or logzio_log_group_to_monitor == ''
  fail:
    msg: "mandatory 'logzio_log_group_to_monitor' is not a valid"
