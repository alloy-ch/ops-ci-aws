---

- name: 'check the common variables'
  include_tasks: '{{ role_path }}/../../tasks/validate_common_vars.yml'

- name: "check manadatory param 'export_id'"
  fail:
    msg: "missing var 'export_id'"
  when: export_id is not defined or export_id == ''

- name: "check if either 'domain_name' or 'base_domain' is set"
  fail:
    msg: "missing var 'domain_name'"
  when: domain_name is not defined or domain_name == ''

- name: "default 'acm_region' to 'aws_region' if needed"
  set_fact:
    acm_region: '{{ aws_region }}'
  when: acm_region is not defined or acm_region == ''

- name: "default 'route53_region' to 'aws_region' if needed"
  set_fact:
    route53_region: '{{ aws_region }}'
  when: route53_region is not defined or route53_region == ''

- name: "default 'domain_name' to 'base_domain' if needed"
  set_fact:
    domain_name: '{{ base_domain }}'
  when: domain_name is not defined or domain_name == ''

- name: 'get default Route53 zone id if needed'
  when: route53_zone_id is not defined or route53_zone_id == ''
  block:
    - name: 'get Route53 stack'
      ringier.aws_cicd.gather_stack_outputs:
        stack_name: '{{ env }}-{{ project_id }}-route53'
        region: '{{ route53_region }}'
      register: route53_stack
    - name: 'get public hosted zone from Route53'
      set_fact:
        route53_zone_id: '{{ route53_stack.outputs.PublicHostedZoneId }}'

- name: 'set display name for single-domain certificate'
  set_fact:
    target_domain_display_name: '{{ domain_name }}'
    target_domain_name: '{{ domain_name }}'
  when: not ( is_wildcard | default(true) | bool )

- name: "set display name for wildcard certificate, and adjust 'domain_name' for wildcard certificate"
  set_fact:
    target_domain_display_name: 'star-{{ domain_name }}'
    target_domain_name: '*.{{ domain_name }}'
  when: is_wildcard | default(true) | bool

- name: 'set cloudformation template'
  set_fact:
    cloudformation_template: '{{ role_path }}/files/cf-acm.yml'

- name: 'convert the domain name to match cloudformation stack naming pattern'
  set_fact:
    domain_name_kebab_case: "{{ target_domain_display_name | replace('.', '-') }}"

- name: 'create certificates'
  include_role:
    name: 'ringier.aws_cicd.run_cloudformation'
  vars:
    stack_name: '{{ env }}-{{ project_id }}-certificate-{{ domain_name_kebab_case }}'
    aws_region: '{{ acm_region }}'
    template: '{{ cloudformation_template }}'
    template_parameters: {}
